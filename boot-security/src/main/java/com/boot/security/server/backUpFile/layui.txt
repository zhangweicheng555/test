

一、form 组建更新渲染：

有些时候，你的有些表单元素可能是动态插入的。这时 form 模块 的自动化渲染是会对其失效的。
虽然我们没有双向绑定机制（因为我们叫经典模块化框架，偷笑.gif） 但没有关系
，你只需要执行 
    
    form.render(type, filter); 方法即可。

第一个参数：type，为表单的 type 类型，可选。默认对全部类型的表单进行一次更新。可局部刷新的 type 如下表：

参数（type）值	描述
select	刷新select选择框渲染
checkbox	刷新checkbox复选框（含开关）渲染
radio	刷新radio单选框框渲染

form.render(); //更新全部
form.render('select'); //刷新select选择框渲染
      
第二个参数：filter，为 class="layui-form" 所在元素的 lay-filter="" 的值。你可以借助该参数，对表单完成局部更新。

<div class="layui-form" lay-filter="test1">
</div>
 
<div class="layui-form" lay-filter="test2">
</div>

form.render(null, 'test1'); //更新 lay-filter="test1" 所在容器内的全部表单状态
form.render('select', 'test2'); //更新 lay-filter="test2" 所在容器内的全部 select 状态
      
      
      
      
二、预设元素属性
<input type="text" lay-verify="email">
<button lay-submit>提交</button>
      
上述的lay-verify、lay-skin、lay-filter、lay-submit神马的都是我们所说的预设的元素属性，他们可以使得一些交互操作交由form模块内部、或者你来借助form提供的JS接口精确控制。目前我们可支持的属性如下表所示：

属性名	属性值	说明
title	任意字符	设定元素名称，一般用于checkbox、radio框
lay-skin	switch（开关风格） primary（原始风格）	定义元素的风格，目前只对 checkbox 元素有效，可将其转变为开关样式
lay-ignore	任意字符或不设值	是否忽略元素美化处理。设置后，将不会对该元素进行初始化渲染，即保留系统风格
lay-filter	任意字符	事件过滤器，主要用于事件的精确匹配，跟选择器是比较类似的。其实它并不私属于form模块，它在 layui 的很多基于事件的接口中都会应用到。
lay-verify	
	required（必填项）
	phone（手机号）
	email（邮箱）
	url（网址）
	number（数字）
	date（日期）
	identity（身份证）
	自定义值	同时支持多条规则的验证，格式：lay-verify="验证A|验证B" 
	如：lay-verify="required|phone|number" 
	另外，除了我们内置的校验规则，你还可以给他设定任意的值，比如lay-verify="pass"，那么你就需要借助form.verify()方法对pass进行一个校验规则的定义。详见表单验证
lay-verType	
	tips（吸附层）
	alert（对话框）
	msg（默认）	用于定义异常提示层模式。注意：该功能为 layui 2.2.0 新增
lay-submit	无需填写值	绑定触发提交的元素，如button      



三、事件监听
语法：form.on('event(过滤器值)', callback);

form模块在 layui 事件机制中注册了专属事件，所以当你使用layui.onevent()自定义模块事件时，请勿占用form名。form支持的事件如下：

event	描述
select	监听select下拉选择事件
checkbox	监听checkbox复选框勾选事件
switch	监听checkbox复选框开关事件
radio	监听radio单选框事件
submit	监听表单提交事件
默认情况下，事件所监听的是全部的form模块元素，但如果你只想监听某一个元素，使用事件过滤器即可。
如：<select lay-filter="test"></select>

codelayui.code
form.on('select(test)', function(data){
  console.log(data);
});
      
监听select选择
下拉选择框被选中时触发，回调函数返回一个object参数，携带两个成员：

语法layui.code
form.on('select(filter)', function(data){
  console.log(data.elem); //得到select原始DOM对象
  console.log(data.value); //得到被选中的值
  console.log(data.othis); //得到美化后的DOM对象
});      
      
请注意：如果你想监听所有的select，去掉过滤器(filter)即可。下面将不再对此进行备注。

监听checkbox复选
复选框点击勾选时触发，回调函数返回一个object参数，携带两个成员：

语法layui.code
form.on('checkbox(filter)', function(data){
  console.log(data.elem); //得到checkbox原始DOM对象
  console.log(data.elem.checked); //是否被选中，true或者false
  console.log(data.value); //复选框value值，也可以通过data.elem.value得到
  console.log(data.othis); //得到美化后的DOM对象
});        
      
监听switch开关
开关被点击时触发，回调函数返回一个object参数，携带两个成员：

语法layui.code
form.on('switch(filter)', function(data){
  console.log(data.elem); //得到checkbox原始DOM对象
  console.log(data.elem.checked); //开关是否开启，true或者false
  console.log(data.value); //开关value值，也可以通过data.elem.value得到
  console.log(data.othis); //得到美化后的DOM对象
});  
      
监听radio单选
radio单选框被点击时触发，回调函数返回一个object参数，携带两个成员：

语法layui.code
form.on('radio(filter)', function(data){
  console.log(data.elem); //得到radio原始DOM对象
  console.log(data.value); //被点击的radio的value值
});  
      
监听submit提交
按钮点击或者表单被执行提交时触发，其中回调函数只有在验证全部通过后才会进入，回调返回三个成员：

语法layui.code
form.on('submit(*)', function(data){
  console.log(data.elem) //被执行事件的元素DOM对象，一般为button对象
  console.log(data.form) //被执行提交的form对象，一般在存在form标签时才会返回
  console.log(data.field) //当前容器的全部表单字段，名值对形式：{name: value}
  return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
});
      
再次温馨提示：上述的submit(*)中的 * 号为事件过滤器的值，是在你绑定执行提交的元素时设定的，如：

codelayui.code
<button lay-submit lay-filter="*">提交</button>     
      
你可以把*号换成任意的值，如：lay-filter="go"，但监听事件时也要改成 form.on('submit(go)', callback);

四、表单初始赋值
语法：form.val('lay-filter的值', object);

用于给指定表单集合的元素初始赋值。该方法为 layui 2.3.0 新增

codelayui.code
//formTest 即 class="layui-form" 所在元素对应的 lay-filter="" 对应的值
form.val("formTest", {
  "username": "贤心" // "name": "value"
  ,"sex": "女"
  ,"auth": 3
  ,"check[write]": true
  ,"open": false
  ,"desc": "我爱layui"
})
      
第二个参数的键值是元素对应的 name 和 value。


